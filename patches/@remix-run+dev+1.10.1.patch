diff --git a/node_modules/@remix-run/dev/dist/devServer/liveReload.js b/node_modules/@remix-run/dev/dist/devServer/liveReload.js
index 2d86138..fdaf21a 100644
--- a/node_modules/@remix-run/dev/dist/devServer/liveReload.js
+++ b/node_modules/@remix-run/dev/dist/devServer/liveReload.js
@@ -37,6 +37,14 @@ var path__default = /*#__PURE__*/_interopDefaultLegacy(path);
 var prettyMs__default = /*#__PURE__*/_interopDefaultLegacy(prettyMs);
 var WebSocket__default = /*#__PURE__*/_interopDefaultLegacy(WebSocket);
 
+function purgeAppRequireCache(buildPath) {
+  for (let key in require.cache) {
+    if (key.startsWith(buildPath)) {
+      delete require.cache[key];
+    }
+  }
+}
+
 const relativePath = file => path__default["default"].relative(process.cwd(), file);
 async function liveReload(config, options = {}) {
   let wss = new WebSocket__default["default"].Server({
@@ -66,6 +74,7 @@ async function liveReload(config, options = {}) {
       log("Rebuilding...");
     },
     onRebuildFinish(durationMs) {
+      purgeAppRequireCache(config.serverBuildPath)
       log(`Rebuilt in ${prettyMs__default["default"](durationMs)}`);
       broadcast({
         type: "RELOAD"
diff --git a/node_modules/@remix-run/dev/dist/devServer/serve.js b/node_modules/@remix-run/dev/dist/devServer/serve.js
index 1216834..1cd4fb4 100644
--- a/node_modules/@remix-run/dev/dist/devServer/serve.js
+++ b/node_modules/@remix-run/dev/dist/devServer/serve.js
@@ -22,13 +22,6 @@ function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'defau
 var getPort__default = /*#__PURE__*/_interopDefaultLegacy(getPort);
 var os__default = /*#__PURE__*/_interopDefaultLegacy(os);
 
-function purgeAppRequireCache(buildPath) {
-  for (let key in require.cache) {
-    if (key.startsWith(buildPath)) {
-      delete require.cache[key];
-    }
-  }
-}
 function tryImport(packageName) {
   try {
     return require(packageName);
@@ -54,7 +47,6 @@ async function serve(config, mode, portPreference) {
   let app = express();
   app.disable("x-powered-by");
   app.use((_, __, next) => {
-    purgeAppRequireCache(config.serverBuildPath);
     next();
   });
   app.use(createApp(config.serverBuildPath, mode, config.publicPath, config.assetsBuildDirectory));
