/* tslint:disable */
/* eslint-disable */
/**
 * Marble API
 * Consume Marble internal endpoints
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScenarioIterationBody } from './ScenarioIterationBody';
import {
    ScenarioIterationBodyFromJSON,
    ScenarioIterationBodyFromJSONTyped,
    ScenarioIterationBodyToJSON,
} from './ScenarioIterationBody';

/**
 * 
 * @export
 * @interface ScenarioIterationWithBody
 */
export interface ScenarioIterationWithBody {
    /**
     * 
     * @type {string}
     * @memberof ScenarioIterationWithBody
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ScenarioIterationWithBody
     */
    scenarioId: string;
    /**
     * 
     * @type {number}
     * @memberof ScenarioIterationWithBody
     */
    version: number;
    /**
     * 
     * @type {Date}
     * @memberof ScenarioIterationWithBody
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof ScenarioIterationWithBody
     */
    updatedAt: Date;
    /**
     * 
     * @type {ScenarioIterationBody}
     * @memberof ScenarioIterationWithBody
     */
    body: ScenarioIterationBody;
}

/**
 * Check if a given object implements the ScenarioIterationWithBody interface.
 */
export function instanceOfScenarioIterationWithBody(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "scenarioId" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "body" in value;

    return isInstance;
}

export function ScenarioIterationWithBodyFromJSON(json: any): ScenarioIterationWithBody {
    return ScenarioIterationWithBodyFromJSONTyped(json, false);
}

export function ScenarioIterationWithBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScenarioIterationWithBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'scenarioId': json['scenarioId'],
        'version': json['version'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
        'body': ScenarioIterationBodyFromJSON(json['body']),
    };
}

export function ScenarioIterationWithBodyToJSON(value?: ScenarioIterationWithBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'scenarioId': value.scenarioId,
        'version': value.version,
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
        'body': ScenarioIterationBodyToJSON(value.body),
    };
}

