/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScenarioVersionForFront
 */
export interface ScenarioVersionForFront {
    /**
     * 
     * @type {string}
     * @memberof ScenarioVersionForFront
     */
    id: string;
    /**
     * 
     * @type {Date}
     * @memberof ScenarioVersionForFront
     */
    creationDate: Date;
    /**
     * 
     * @type {string}
     * @memberof ScenarioVersionForFront
     */
    authorId: string;
    /**
     * 
     * @type {string}
     * @memberof ScenarioVersionForFront
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ScenarioVersionForFront
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof ScenarioVersionForFront
     */
    bodyEncodedWithProtobuf: string;
}

/**
 * Check if a given object implements the ScenarioVersionForFront interface.
 */
export function instanceOfScenarioVersionForFront(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "creationDate" in value;
    isInstance = isInstance && "authorId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "bodyEncodedWithProtobuf" in value;

    return isInstance;
}

export function ScenarioVersionForFrontFromJSON(json: any): ScenarioVersionForFront {
    return ScenarioVersionForFrontFromJSONTyped(json, false);
}

export function ScenarioVersionForFrontFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScenarioVersionForFront {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'creationDate': (new Date(json['creation_date'])),
        'authorId': json['author_id'],
        'name': json['name'],
        'description': json['description'],
        'bodyEncodedWithProtobuf': json['body_encoded_with_protobuf'],
    };
}

export function ScenarioVersionForFrontToJSON(value?: ScenarioVersionForFront | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'creation_date': (value.creationDate.toISOString()),
        'author_id': value.authorId,
        'name': value.name,
        'description': value.description,
        'body_encoded_with_protobuf': value.bodyEncodedWithProtobuf,
    };
}

