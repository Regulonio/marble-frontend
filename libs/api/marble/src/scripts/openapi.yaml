openapi: 3.0.3
info:
  version: 1.0.0
  title: 'Marble API'
  description: 'Consume Marble internal endpoints'
tags:
  - name: Authorization
    description: Operations about authorization.
  - name: Users
    description: Operations about users.
  - name: Decisions
    description: Operations about decisions.
  - name: Scenarios
    description: Operations about scenarios.
  - name: Scenario Iterations
    description: Operations about scenario iterations.
  - name: Scenario Iteration Rules
    description: Operations about scenario iteration rules.
  - name: Scenario Publications
    description: Operations about scenario publications.
servers:
  - url: 'http://localhost:8080'
    description: Local devlopment server
paths:
  /token:
    post:
      tags:
        - Authorization
      summary: Get an access token
      description: You need to suply either "X-API-Key" or “Authorization" header
      operationId: postToken
      security: []
      parameters:
        - in: header
          description: 'Valid Api Key token to generate a new access token'
          name: X-API-Key
          schema:
            type: string
        - in: header
          description: 'Valid bearer token to generate a new access token'
          name: Authorization
          schema:
            type: string
      responses:
        '200':
          description: New access token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '401':
          $ref: '#/components/responses/401'
  /credentials:
    get:
      tags:
        - Users
      summary: Get user credentials included in the token
      description: You need to suply either "X-API-Key" or “Authorization" header
      operationId: getCredentials
      security:
        - Oauth2ClientCredentials: []
      responses:
        '200':
          description: Credentials included in the token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credentials'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /decisions:
    get:
      tags:
        - Decisions
      summary: List decisions
      operationId: listDecisions
      security:
        - Oauth2ClientCredentials: []
      responses:
        '200':
          description: List of corresponding decisions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Decision'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
  /decisions/{decisionId}:
    get:
      tags:
        - Decisions
      summary: Get a decision by id
      operationId: getDecision
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: decisionId
          description: ID of the decision that need to be fetched
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The decision corresponding to the provided `decisionId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Decision'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /custom-lists:
    get:
      tags:
        - CustomLists
      summary: List custom list
      operationId: listCustomLists
      security:
        - Oauth2ClientCredentials: []
      responses:
        '200':
          description: List of corresponding scenario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
    post:
      tags:
        - CustomLists
      summary: Create a custom list
      operationId: createCustomLists
      security:
        - Oauth2ClientCredentials: []
      requestBody:
        description: 'Custom list object that needs to be added to the database'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomListBody'
        required: true
      responses:
        '200':
          description: Created custom list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /custom-lists/{listId}:
    get:
      tags:
        - CustomList
      summary: Get a custom list values
      operationId: getCustomList
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: listId
          description: ID of the custom list that need to be fetched
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The scenario corresponding to the provided `listId`
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CustomListValue'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    patch:
      tags:
        - CustomList
      summary: Update a custom list
      operationId: updateCustomList
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: listId
          description: ID of the custom list that need to be updated
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'Updated scenario object'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomListBody'
        required: true
      responses:
        '200':
          description: The updated scenario corresponding to the provided `customListId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    delete:
      tags:
        - CustomList
      summary: Delete a custom list
      operationId: deleteCustomList
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: listId
          description: ID of the custom list that need to be deleted
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The deleted scenario corresponding to the provided `customListId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomList'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /custom-lists/{listId}/values:
    post:
      tags:
        - CustomListValue
      summary: Create a custom list value
      operationId: createCustomListValue
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: listId
          description: ID of the list on which the value will be added
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'Custom list value object that needs to be added to the database'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomListValueBody'
        required: true
      responses:
        '200':
          description: Created custom list Value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListValue'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
    delete:
      tags:
        - CustomListValue
      summary: Delete a custom list value
      operationId: deleteCustomListValue
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: listId
          description: ID of the custom list value that need to be deleted
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'Delete custom list value object'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCustomListValueBody'
        required: true
      responses:
        '200':
          description: The deleted custom list value corresponding to the provided `customListId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomListValue'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenarios:
    get:
      tags:
        - Scenarios
      summary: List scenarios
      operationId: listScenarios
      security:
        - Oauth2ClientCredentials: []
      responses:
        '200':
          description: List of corresponding scenario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Scenario'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
    post:
      tags:
        - Scenarios
      summary: Create a scenario
      operationId: createScenario
      security:
        - Oauth2ClientCredentials: []
      requestBody:
        description: 'Scenario object that needs to be added to the database'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScenarioBody'
        required: true
      responses:
        '200':
          description: Created scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '422':
          $ref: '#/components/responses/422'
  /scenarios/{scenarioId}:
    get:
      tags:
        - Scenarios
      summary: Get a scenario by id
      operationId: getScenario
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioId
          description: ID of the scenario that need to be fetched
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The scenario corresponding to the provided `scenarioId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Scenarios
      summary: Update a scenario
      operationId: updateScenario
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioId
          description: ID of the scenario that need to be updated
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'Updated scenario object'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScenarioBody'
        required: true
      responses:
        '200':
          description: The updated scenario corresponding to the provided `scenarioId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Scenario'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenario-iterations:
    get:
      tags:
        - Scenario Iterations
      summary: List iterations
      description: List iterations corresponding to filters
      operationId: listScenarioIterations
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioId
          description: ID of the scenario returned iterations should be linked to
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Scenario iterations corresponding to filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioIteration'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Scenario Iterations
      summary: Create a scenario iteration
      description: Create a scenario iteration for a given `scenarioId`
      operationId: createScenarioIteration
      security:
        - Oauth2ClientCredentials: []
      requestBody:
        description: 'Scenario iteration object to create and linked `scenarioId`'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScenarioIterationBody'
        required: true
      responses:
        '200':
          description: The created scenario iteration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioIterationWithBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenario-iterations/{scenarioIterationId}:
    get:
      tags:
        - Scenario Iterations
      summary: Get a scenario iteration by id
      operationId: getScenarioIteration
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioIterationId
          description: ID of the scenario iteration that need to be fetched
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The scenario iteration corresponding to the provided `scenarioIterationId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioIterationWithBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Scenario Iterations
      summary: Update a scenario iteration
      operationId: updateScenarioIteration
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioIterationId
          description: ID of the scenario iteration that need to be updated
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'Updated scenario iteration object'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScenarioIterationBody'
        required: true
      responses:
        '200':
          description: The updated scenario iteration corresponding to the provided `scenarioIterationId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioIterationWithBody'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenario-iteration-rules:
    get:
      tags:
        - Scenario Iteration Rules
      summary: List rules
      description: List rules using provided filters
      operationId: listScenarioIterationRules
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioIterationId
          description: ID of the scenario iteration returned rules should be linked to
          in: query
          required: false
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Scenario iterations rules corresponding to filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioIterationRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Scenario Iteration Rules
      summary: Create a scenario iteration rule
      description: Create a scenario iteration rule for a given `scenarioIterationId`
      operationId: createScenarioIterationRule
      security:
        - Oauth2ClientCredentials: []
      requestBody:
        description: 'Scenario iteration rule object to create and linked `scenarioIterationId`'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScenarioIterationRuleBody'
        required: true
      responses:
        '200':
          description: The created scenario iteration rule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioIterationRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenario-iteration-rules/{ruleId}:
    get:
      tags:
        - Scenario Iteration Rules
      summary: Get a scenario iteration rule by id
      operationId: getScenarioIterationRule
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: ruleId
          description: ID of the rule that need to be fetched
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The scenario iteration rule corresponding to the provided `ruleId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioIterationRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    put:
      tags:
        - Scenario Iteration Rules
      summary: Update a scenario iteration rule
      operationId: updateScenarioIterationRule
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: ruleId
          description: ID of the rule that need to be updated
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: 'Updated scenario iteration rule object'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateScenarioIterationRuleBody'
        required: true
      responses:
        '200':
          description: The updated scenario iteration rule corresponding to the provided `ruleId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioIterationRule'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenario-publications:
    get:
      tags:
        - Scenario Publications
      summary: List scenario publications
      description: List scenario publications using provided filters
      operationId: listScenarioPublications
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioId
          description: ID of the scenario returned publications should be linked to
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: scenarioIterationId
          description: ID of the scenario iteration returned publications should be linked to
          in: query
          required: false
          schema:
            type: string
            format: uuid
        - name: publicationAction
          description: publication action to return
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/PublicationAction'
      responses:
        '200':
          description: Scenario publications corresponding to filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioPublication'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
    post:
      tags:
        - Scenario Publications
      summary: Create a scenario publication
      operationId: createScenarioPublication
      security:
        - Oauth2ClientCredentials: []
      requestBody:
        description: 'Describe the scenario publication action'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateScenarioPublicationBody'
        required: true
      responses:
        '200':
          description: The list of created scenario publication actions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioPublication'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
  /scenario-publications/{scenarioPublicationId}:
    get:
      tags:
        - Scenario Publications
      summary: Get a scenario publication by id
      operationId: getScenarioPublication
      security:
        - Oauth2ClientCredentials: []
      parameters:
        - name: scenarioPublicationId
          description: ID of the scenario publication that need to be fetched
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: The scenario publication corresponding to the provided `scenarioPublicationId`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScenarioPublication'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
components:
  schemas:
    Token:
      type: object
      required:
        - access_token
        - token_type
        - expires_in
      properties:
        access_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: string
          format: date-time
    Credentials:
      type: object
      required:
        - credentials
      properties:
        credentials:
          type: object
          required:
            - organization_id
            - role
            - actor_identity
          properties:
            organization_id:
              type: string
            role:
              type: string
            actor_identity:
              type: object
              properties:
                user_id:
                  type: string
                email:
                  type: string
                api_key_name:
                  type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
    Decision:
      type: object
      required:
        - id
        - created_at
        - trigger_object
        - trigger_object_type
        - outcome
        - scenario
        - rules
        - score
      properties:
        id:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        trigger_object:
          type: object
        trigger_object_type:
          type: string
        outcome:
          type: string
          enum: ['approve', 'review', 'decline', 'null', 'unknown']
        scenario:
          type: object
          required:
            - id
            - name
            - description
            - version
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            description:
              type: string
            version:
              type: integer
        rules:
          type: array
          items:
            type: object
            required:
              - name
              - description
              - score_modifier
              - result
            properties:
              name:
                type: string
              description:
                type: string
              score_modifier:
                type: integer
              result:
                type: boolean
              error:
                $ref: '#/components/schemas/Error'
        score:
          type: integer
        error:
          $ref: '#/components/schemas/Error'
    CustomList:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
    CustomListValue:
      type: object
      required:
        - id
        - value
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
    CreateCustomListBody:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
    UpdateCustomListBody:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
    CreateCustomListValueBody:
      type: object
      required:
        - value
      properties:
        value:
          type: string
    DeleteCustomListValueBody:
      type: object
      required:
        - value
      properties:
        id:
          type: string
    Scenario:
      type: object
      required:
        - id
        - name
        - description
        - triggerObjectType
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        triggerObjectType:
          type: string
        createdAt:
          type: string
          format: date-time
        liveVersionId:
          type: string
          format: uuid
    CreateScenarioBody:
      type: object
      required:
        - name
        - description
        - triggerObjectType
      properties:
        name:
          type: string
        description:
          type: string
        triggerObjectType:
          type: string
    UpdateScenarioBody:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    ScenarioIteration:
      type: object
      required:
        - id
        - scenarioId
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
        scenarioId:
          type: string
          format: uuid
        version:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ScenarioIterationWithBody:
      allOf:
        - $ref: '#/components/schemas/ScenarioIteration'
        - type: object
          required:
            - body
          properties:
            body:
              type: object
              required:
                - rules
              properties:
                triggerCondition:
                  $ref: '#/components/schemas/Operator'
                  description: Valid marshalled operator
                scoreReviewThreshold:
                  type: integer
                  minimum: 0
                scoreRejectThreshold:
                  type: integer
                  minimum: 0
                rules:
                  type: array
                  items:
                    $ref: '#/components/schemas/ScenarioIterationRule'
    CreateScenarioIterationBody:
      type: object
      required:
        - scenarioId
      properties:
        scenarioId:
          type: string
          format: uuid
        body:
          type: object
          properties:
            triggerCondition:
              $ref: '#/components/schemas/Operator'
              description: Valid marshalled operator
            scoreReviewThreshold:
              type: integer
              minimum: 0
            scoreRejectThreshold:
              type: integer
              minimum: 0
            rules:
              type: array
              items:
                $ref: '#/components/schemas/CreateScenarioIterationRuleBody'
    UpdateScenarioIterationBody:
      type: object
      properties:
        body:
          type: object
          properties:
            triggerCondition:
              $ref: '#/components/schemas/Operator'
              description: Valid marshalled operator
            scoreReviewThreshold:
              type: integer
              minimum: 0
            scoreRejectThreshold:
              type: integer
              minimum: 0
    ScenarioIterationRule:
      type: object
      required:
        - id
        - scenarioIterationId
        - displayOrder
        - name
        - description
        - formula
        - scoreModifier
        - createdAt
      properties:
        id:
          type: string
          format: uuid
        scenarioIterationId:
          type: string
          format: uuid
        displayOrder:
          type: integer
        name:
          type: string
        description:
          type: string
        formula:
          $ref: '#/components/schemas/Operator'
          description: Valid marshalled operator
        scoreModifier:
          type: integer
        createdAt:
          type: string
          format: date-time
    CreateScenarioIterationRuleBody:
      type: object
      required:
        - scenarioIterationId
        - displayOrder
        - name
        - description
        - formula
        - scoreModifier
      properties:
        scenarioIterationId:
          type: string
          format: uuid
        displayOrder:
          type: integer
        name:
          type: string
        description:
          type: string
        formula:
          $ref: '#/components/schemas/Operator'
          description: Valid marshalled operator
        scoreModifier:
          type: integer
    UpdateScenarioIterationRuleBody:
      type: object
      properties:
        displayOrder:
          type: integer
        name:
          type: string
        description:
          type: string
        formula:
          type: object
          description: Valid marshalled operator
        scoreModifier:
          type: integer
    ScenarioPublication:
      type: object
      required:
        - id
        - createdAt
        - scenarioIterationId
        - publicationAction
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        scenarioIterationId:
          type: string
          format: uuid
        publicationAction:
          $ref: '#/components/schemas/PublicationAction'
    CreateScenarioPublicationBody:
      type: object
      required:
        - scenarioIterationId
        - publicationAction
      properties:
        scenarioIterationId:
          type: string
          format: uuid
        publicationAction:
          $ref: '#/components/schemas/PublicationAction'
    PublicationAction:
      type: string
      enum: ['publish', 'unpublish']
    Operator:
      oneOf:
        - $ref: '#/components/schemas/AndOperator'
        - $ref: '#/components/schemas/BoolConstantOperator'
        - $ref: '#/components/schemas/DbFieldBoolOperator'
        - $ref: '#/components/schemas/DbFieldFloatOperator'
        - $ref: '#/components/schemas/DbFieldStringOperator'
        - $ref: '#/components/schemas/DivideFloatOperator'
        - $ref: '#/components/schemas/EqualBoolOperator'
        - $ref: '#/components/schemas/EqualStringOperator'
        - $ref: '#/components/schemas/EqualFloatOperator'
        - $ref: '#/components/schemas/FloatConstantOperator'
        - $ref: '#/components/schemas/GreaterFloatOperator'
        - $ref: '#/components/schemas/GreaterOrEqualFloatOperator'
        - $ref: '#/components/schemas/LesserFloatOperator'
        - $ref: '#/components/schemas/LesserOrEqualFloatOperator'
        - $ref: '#/components/schemas/NotOperator'
        - $ref: '#/components/schemas/OrOperator'
        - $ref: '#/components/schemas/PayloadFieldBoolOperator'
        - $ref: '#/components/schemas/PayloadFieldFloatOperator'
        - $ref: '#/components/schemas/PayloadFieldStringOperator'
        - $ref: '#/components/schemas/ProductFloatOperator'
        - $ref: '#/components/schemas/RoundFloatOperator'
        - $ref: '#/components/schemas/StringIsInListOperator'
        - $ref: '#/components/schemas/StringListConstantOperator'
        - $ref: '#/components/schemas/StringConstantOperator'
        - $ref: '#/components/schemas/SubstractFloatOperator'
        - $ref: '#/components/schemas/SumFloatOperator'
    AndOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['AND']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    OrOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['OR']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    EqualBoolOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['EQUAL_BOOL']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    EqualStringOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['EQUAL_STRING']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    EqualFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['EQUAL_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    NotOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['NOT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    StringIsInListOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['STRING_IS_IN_LIST']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    StringListConstantOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['STRING_LIST_CONSTANT']
        staticData:
          type: object
          required:
            - value
          properties:
            value:
              type: array
              items:
                type: string
    FloatConstantOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['FLOAT_CONSTANT']
        staticData:
          type: object
          required:
            - value
          properties:
            value:
              type: number
    BoolConstantOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['BOOL_CONSTANT']
        staticData:
          type: object
          required:
            - value
          properties:
            value:
              type: boolean
    GreaterFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['GREATER_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    GreaterOrEqualFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['GREATER_OR_EQUAL_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    LesserFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['LESSER_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    LesserOrEqualFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['LESSER_OR_EQUAL_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    StringConstantOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['STRING_CONSTANT']
        staticData:
          type: object
          required:
            - value
          properties:
            value:
              type: string
    DbFieldBoolOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['DB_FIELD_BOOL']
        staticData:
          type: object
          required:
            - triggerTableName
            - path
            - fieldName
          properties:
            triggerTableName:
              type: string
            path:
              type: array
              items:
                type: string
            fieldName:
              type: string
    DbFieldFloatOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['DB_FIELD_FLOAT']
        staticData:
          type: object
          required:
            - triggerTableName
            - path
            - fieldName
          properties:
            triggerTableName:
              type: string
            path:
              type: array
              items:
                type: string
            fieldName:
              type: string
    DbFieldStringOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['DB_FIELD_STRING']
        staticData:
          type: object
          required:
            - triggerTableName
            - path
            - fieldName
          properties:
            triggerTableName:
              type: string
            path:
              type: array
              items:
                type: string
            fieldName:
              type: string
    PayloadFieldBoolOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['PAYLOAD_FIELD_BOOL']
        staticData:
          type: object
          required:
            - fieldName
          properties:
            fieldName:
              type: string
    PayloadFieldFloatOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['PAYLOAD_FIELD_FLOAT']
        staticData:
          type: object
          required:
            - fieldName
          properties:
            fieldName:
              type: string
    PayloadFieldStringOperator:
      type: object
      required:
        - type
        - staticData
      properties:
        type:
          type: string
          enum: ['PAYLOAD_FIELD_STRING']
        staticData:
          type: object
          required:
            - fieldName
          properties:
            fieldName:
              type: string
    SumFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['SUM_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    ProductFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['PRODUCT_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    SubstractFloatOperator:
      type: object
      required:
        - type
        - children
      properties:
        type:
          type: string
          enum: ['SUBTRACT_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    DivideFloatOperator:
      type: object
      required:
        - type
        - children
        - staticData
      properties:
        type:
          type: string
          enum: ['DIVIDE_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
    RoundFloatOperator:
      type: object
      required:
        - type
        - children
        - staticData
      properties:
        type:
          type: string
          enum: ['ROUND_FLOAT']
        children:
          type: array
          items:
            $ref: '#/components/schemas/Operator'
        staticData:
          type: object
          required:
            - level
          properties:
            level:
              type: integer
  securitySchemes:
    Oauth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: token-bff
          scopes: {}
  responses:
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            type: string
            example: Unauthorized
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            type: string
            example: Forbidden
    '404':
      description: Not found
      content:
        application/json:
          schema:
            type: string
            example: Not found
    '422':
      description: Unprocessable Content
      content:
        application/json:
          schema:
            type: object
            description: To be defined
