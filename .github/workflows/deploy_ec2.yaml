name: Deploy to EC2

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: marble-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save private key to file
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Copy Docker image to EC2
        run: |
          docker save marble-frontend:latest > marble-frontend.tar
          scp -o StrictHostKeyChecking=no -i key.pem marble-frontend.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ubuntu/trans-monitoring/

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e
            cd /home/ubuntu/trans-monitoring

            # Stop existing containers
            docker compose down || true

            # Load the new image
            docker load < marble-frontend.tar

            # Remove the tar file
            rm marble-frontend.tar

            # Start containers with new image
            docker compose --env-file .env.example up -d

            # Clean up unused Docker images
            docker image prune -f --filter "until=24h"
          EOF
