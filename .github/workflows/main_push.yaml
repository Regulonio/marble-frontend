name: Push on main (Check & Deploy)

on:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    uses: ./.github/workflows/check.yaml

  build_and_deploy:
    needs: check
    name: Cloud Run Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Set shared env variables
        id: get_env
        run: |
          if true || [${{ github.ref_name }} == "main"]
          then 
            echo "GCP_PROJECT_ID=${{ vars.GCP_PROJECT_ID_STAGING }}" >> $GITHUB_OUTPUT
          fi
        # Add prod case once setup

      - name: Checkout
        uses: actions/checkout@v3

      - name: Auth
        uses: 'google-github-actions/auth@v1'
        if: ${{ github.ref_name }} == "main"
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_STAGING }}'

      - name: Auth if prod
        uses: 'google-github-actions/auth@v1'
        if: ${{ github.ref_name }} == "main"
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_STAGING }}'
          # To modify when prod is setup

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          install_components: beta

      - name: Configure Docker
        run: |
          gcloud auth configure-docker

      - name: Build
        run: |
          docker build \
            --platform linux/amd64 \
            --tag eu.gcr.io/${{ steps.get_env.outputs.GCP_PROJECT_ID }}/marble-front:latest \
            -f ./apps/builder/Dockerfile \
            .

      - name: Push
        run: |
          docker push eu.gcr.io/${{ steps.get_env.outputs.GCP_PROJECT_ID }}/marble-front:latest

      - name: Deploy server
        run: |
          gcloud run deploy marble-front \
            --quiet \
            --image="eu.gcr.io/${{ steps.get_env.outputs.GCP_PROJECT_ID }}/marble-front:latest" \
            --region="europe-west9" \
            --service-account=marble-frontend-cloud-run@${{ steps.get_env.outputs.GCP_PROJECT_ID }}.iam.gserviceaccount.com \
            --port=8080
